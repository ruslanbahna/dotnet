name: dotnet-slim-test

on: [push]

env:
  IMAGE_NAME: ${{ secrets.HUB_REGISTRY }}/hardened-dotnet
  DOCKER_CONTENT_TRUST: 1
  BASE_IMAGE: ubuntu:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dotnet-test/Dockerfile
          push: false # Set to false to build but not push initially
          tags: ${{ env.IMAGE_NAME }}:latest
          load: true # Load the built image into Docker's image store for scanning

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          DOCKER_CONTENT_TRUST: 0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          exit-code: '1' # Fail the job if vulnerabilities are found
          severity: HIGH,CRITICAL 
        continue-on-error: true

      - name: Push Docker image
        if: success() # Only push if the scan step succeeded (no HIGH or CRITICAL vulnerabilities)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dotnet-test/Dockerfile
          push: true # Push the image if the scan is successful
          tags: ${{ env.IMAGE_NAME }}:latest
